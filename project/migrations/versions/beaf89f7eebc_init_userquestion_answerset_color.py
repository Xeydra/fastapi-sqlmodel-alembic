"""init_userquestion_answerset_color

Revision ID: beaf89f7eebc
Revises: 9c917ce84d16
Create Date: 2024-08-01 09:14:46.094826

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel             # NEW

from sqlmodel import Session, select
from app.models import Color, UserQuestionAnswersetColor, UserQuestion


# revision identifiers, used by Alembic.
revision = 'beaf89f7eebc'
down_revision = '9c917ce84d16'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('userquestionanswersetcolor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_question_id', sa.Integer(), nullable=False),
    sa.Column('color_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['color_id'], ['color.id'], ),
    sa.ForeignKeyConstraint(['user_question_id'], ['userquestion.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    bind = op.get_bind()
    session = Session(bind=bind)
    colorUserQuestion = session.exec(select(UserQuestion).where(UserQuestion.question_type_id == 'color_picker')).one()
    colors = session.exec(select(Color)).all()

    for color in colors:
        session.add(UserQuestionAnswersetColor(user_question=colorUserQuestion, color=color))
    
    session.commit()
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('userquestionanswersetcolor')
    # ### end Alembic commands ###
