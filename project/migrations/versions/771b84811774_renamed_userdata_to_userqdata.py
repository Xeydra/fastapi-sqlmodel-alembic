"""renamed userdata to userqdata

Revision ID: 771b84811774
Revises: c829e703d7d7
Create Date: 2024-08-29 08:15:04.181400

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel             # NEW
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '771b84811774'
down_revision = 'c829e703d7d7'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('userqdatacolor',
    sa.Column('for_date', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_question_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_question_id'], ['userquestioncolor.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_userqdatacolor_value'), 'userqdatacolor', ['value'], unique=True)
    op.drop_table('userdatacolor')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('userdatacolor',
    sa.Column('value', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('for_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_question_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_question_id'], ['userquestioncolor.id'], name='userdatacolor_user_question_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='userdatacolor_pkey')
    )
    op.drop_index(op.f('ix_userqdatacolor_value'), table_name='userqdatacolor')
    op.drop_table('userqdatacolor')
    # ### end Alembic commands ###
